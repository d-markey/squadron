<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../jgenhtml.xsl"?><coverage branch-rate="NaN" branches-covered="0" branches-valid="0" complexity="0" date="2025-09-28" filename="_internal_logger.dart" function-rate="NaN" functions-covered="0" functions-valid="0" line-rate="1.0" lines-covered="8" lines-valid="8" package="src/_impl/xplat" testname="lcov.info" version="1.6">
    <lines>
        <line number="1">
            <code>import 'package:logger/web.dart';</code>
        </line>
        <line number="2">
            <code/>
        </line>
        <line number="3">
            <code>class InternalLogger extends Logger {</code>
        </line>
        <line hits="10" number="4">
            <code>  InternalLogger()</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="10" number="5">
            <code>      : super(</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="10" number="6">
            <code>          filter: _LogAllFilter(),</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="10" number="7">
            <code>          printer: _DummyPrinter(),</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line hits="10" number="8">
            <code>          output: _NoLogOutput(),</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line number="9">
            <code>        );</code>
        </line>
        <line number="10">
            <code>}</code>
        </line>
        <line number="11">
            <code/>
        </line>
        <line number="12">
            <code>class _NoLogOutput extends LogOutput {</code>
        </line>
        <line hits="10" number="13">
            <code>  @override</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line number="14">
            <code>  void output(OutputEvent event) {</code>
        </line>
        <line number="15">
            <code>    // Do nothing in this logger (which lives in the worker thread).</code>
        </line>
        <line number="16">
            <code>    // The log event will be captured and forwarded to the channelLogger (which</code>
        </line>
        <line number="17">
            <code>    // lives in the main thread).</code>
        </line>
        <line number="18">
            <code>  }</code>
        </line>
        <line number="19">
            <code>}</code>
        </line>
        <line number="20">
            <code/>
        </line>
        <line number="21">
            <code>class _DummyPrinter extends LogPrinter {</code>
        </line>
        <line hits="10" number="22">
            <code>  @override</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line number="23">
            <code>  List&lt;String&gt; log(LogEvent event) =&gt;</code>
        </line>
        <line number="24">
            <code>      // Logger will ignore log events that produce an empty array.</code>
        </line>
        <line number="25">
            <code>      // Make sure the array is not empty so the log event is notified</code>
        </line>
        <line number="26">
            <code>      // through Logger's output callbacks.</code>
        </line>
        <line number="27">
            <code>      const [''];</code>
        </line>
        <line number="28">
            <code>}</code>
        </line>
        <line number="29">
            <code/>
        </line>
        <line number="30">
            <code>class _LogAllFilter extends LogFilter {</code>
        </line>
        <line hits="10" number="31">
            <code>  @override</code>
            <hit count="10" name="&lt;unnamed&gt;"/>
        </line>
        <line number="32">
            <code>  bool shouldLog(LogEvent event) =&gt;</code>
        </line>
        <line number="33">
            <code>      // Log everything. It's up to the receiving channelLogger to decide</code>
        </line>
        <line number="34">
            <code>      // whether the message should be logged or not.</code>
        </line>
        <line number="35">
            <code>      true;</code>
        </line>
        <line number="36">
            <code>}</code>
        </line>
    </lines>
    <config branch-coverage="true" description-file="false" function-coverage="true" genhtml_hi_limit="90" genhtml_med_limit="75" legend="false" no-sort="false" no-source="false" show-details="false"/>
    <base href="../../../"/>
    <base href="../../../"/>
</coverage>
